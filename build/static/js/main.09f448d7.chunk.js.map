{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","services/login.js","reducers/userReducer.js","store.js","components/Blog.js","components/Notification.js","components/Togglable.js","services/users.js","components/LoginForm.js","components/BlogForm.js","components/Users.js","components/User.js","App.js","index.js"],"names":["SET_MESSAGE","CLEAR_MESSAGE","timeOut","setMessage","message","color","seconds","async","clearTimeout","setTimeout","dispatch","type","data","reducer","state","action","baseUrl","token","axios","get","newToken","config","headers","Authorization","post","newBlog","id","payload","patch","delete","error","console","comment","INIT_BLOGS","CREATE_BLOG","LIKE_BLOG","COMMENT_BLOG","DELETE_BLOG","map","blog","filter","credentials","SET_INITIAL","LOGIN","LOGOUT","user","combineReducers","notificationReducer","blogs","blogReducer","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Blog","likeBlog","deleteBlog","addComment","setComment","useState","className","title","author","Link","href","url","rel","target","likes","Button","variant","size","sx","m","onClick","name","TextField","value","onChange","alert","comments","length","Notification","useSelector","style","display","background","borderStyle","borderColor","borderRadius","borderWidth","fontSize","padding","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","userData","LoginForm","handleSubmit","setName","username","setUsername","password","setPassword","rePassword","setRePassword","showSignup","setShowSignup","handleSignup","event","preventDefault","usersService","Container","onSubmit","label","mb","my","BlogForm","setTitle","setAuthor","setUrl","Box","component","required","mr","Users","users","setUsers","useEffect","then","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","to","User","useParams","setUser","foundUser","App","blogFormRef","useRef","useDispatch","blogService","sort","a","b","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","userService","setItem","stringify","exception","handleCreate","savedBlog","createBlog","current","match","useRouteMatch","find","params","AppBar","position","Toolbar","removeItem","path","numLikes","likedBlog","confirm","commentedBlog","commentBlog","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09f448d7.chunk.js","sourcesContent":["const SET_MESSAGE = 'SET_MESSAGE'\nconst CLEAR_MESSAGE = 'CLEAR_MESSAGE'\n\nconst clearMessage = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: CLEAR_MESSAGE\n        })\n    }\n}\n\nlet timeOut\n\nexport const setMessage = (message, color, seconds) => {\n    return async (dispatch) => {\n        if (timeOut) {\n            clearTimeout(timeOut)\n        }\n        timeOut = setTimeout(() => dispatch(clearMessage()), seconds * 1000)\n\n        dispatch({\n            type: SET_MESSAGE,\n            data: {\n                message,\n                color\n            }\n        })\n    }\n}\n\nconst reducer = (state = { message: '', color: 'green'}, action) => {\n    switch(action.type) {\n        case SET_MESSAGE:\n            return action.data\n        case CLEAR_MESSAGE:\n            return {\n                message: '',\n                color: 'green'\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const request = await axios.get(baseUrl)\n  return request.data\n}\n\nconst create = async (newBlog) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst update = async (id, payload) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.patch(`${baseUrl}/${id}`, payload, config)\n  return response.data\n}\n\nconst createComment = async (id, comment) => {\n  const response = await axios.post(`${baseUrl}/${id}/comments`, { comment })\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  try {\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n    return response.data\n  } catch (error) {\n    console.error(error)\n    return error.message\n  }\n}\n\nexport default { getAll, setToken, create, update, remove, createComment }","import blogService from '../services/blogs'\n\nconst INIT_BLOGS = 'INIT_BLOGS'\nconst CREATE_BLOG = 'CREATE_BLOG'\nconst LIKE_BLOG = 'LIKE_BLOG'\nconst COMMENT_BLOG = 'COMMENT_BLOG'\nconst DELETE_BLOG = 'DELETE_BLOG'\n\nexport const initializeBlogs = () => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll()\n    blogs.sort((a, b) => b.likes - a.likes)\n    dispatch({\n      type: INIT_BLOGS,\n      data: blogs\n    })\n  }\n}\n\nexport const createBlog = ({ title, author, url }) => {\n  return async (dispatch) => {\n    const savedBlog = await blogService.create({ title, author, url })\n    dispatch({\n      type: CREATE_BLOG,\n      data: savedBlog\n    })\n  }\n}\n\nexport const likeBlog = (id, numLikes) => {\n  return async (dispatch) => {\n    const likedBlog = await blogService.update(id, { likes: numLikes + 1 })\n    dispatch({\n      type: LIKE_BLOG,\n      data: likedBlog\n    })\n  }\n}\n\nexport const commentBlog = (id, comment) => {\n  return async (dispatch) => {\n    const commentedBlog = await blogService.createComment(id, comment)\n    dispatch({\n      type: COMMENT_BLOG,\n      data: commentedBlog\n    })\n  }\n}\n\nexport const deleteBlog = (id) => {\n  return async (dispatch) => {\n    await blogService.remove(id)\n    dispatch({\n      type: DELETE_BLOG,\n      data: { id }\n    })\n  }\n}\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n  case INIT_BLOGS:\n    return action.data\n  case CREATE_BLOG:\n    return [...state, action.data]\n  case LIKE_BLOG:\n    return state.map(blog => blog.id === action.data.id ? action.data : blog)\n  case COMMENT_BLOG:\n    return state.map(blog => blog.id === action.data.id ? action.data : blog)\n  case DELETE_BLOG:\n    return state.filter(blog => blog.id !== action.data.id)\n  default:\n    return state\n  }\n}\n\nexport default reducer","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import blogService from '../services/blogs'\nimport userService from '../services/login'\n\nconst SET_INITIAL = 'SET_INITIAL'\nconst LOGIN = 'LOGIN'\nconst LOGOUT = 'LOGOUT'\n\nexport const initializeUser = () => {\n  return async (dispatch) => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      blogService.setToken(user.token)\n      dispatch({\n        type: SET_INITIAL,\n        user\n      })\n    }\n  }\n}\n\nexport const loginUser = (credentials) => {\n  return async (dispatch) => {\n    const user = await userService.login(credentials)\n    if (user) {\n      window.localStorage.setItem(\n        'loggedBloglistUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      dispatch({\n        type: LOGIN,\n        user\n      })\n    }\n  }\n}\n\nexport const logoutUser = () => {\n  return async (dispatch) => {\n    window.localStorage.removeItem('loggedBloglistUser')\n    dispatch({\n      type: LOGOUT\n    })\n  }\n}\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n  case SET_INITIAL:\n    return action.user\n  case LOGIN:\n    return action.user\n  case LOGOUT:\n    return null\n  default:\n    return state\n  }\n}\n\nexport default reducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport userReducer from './reducers/userReducer'\n\nconst reducer = combineReducers({\n  message: notificationReducer,\n  blogs: blogReducer,\n  user: userReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React, { useState } from 'react'\n\nimport { Link, Button, TextField } from '@mui/material'\n\nexport const blogStyle = {\n  paddingTop: 10,\n  paddingLeft: 2,\n  border: 'solid',\n  borderWidth: 1,\n  marginBottom: 5\n}\n\nconst Blog = ({ blog, user = null, likeBlog, deleteBlog, addComment }) => {\n\n  const [comment, setComment] = useState('')\n\n  const submitComment = () => {\n    if (!comment) {\n      return alert('Please enter a valid comment!')\n    }\n    addComment(blog.id, comment)\n    setComment('')\n  }\n\n  if (!blog) return null\n\n  return (\n    <div className='blog'>\n      <h2>{blog.title} {blog.author}</h2>\n      <Link href={blog.url} rel=\"noreferrer\" target=\"_blank\">{blog.url}</Link><br />\n      {blog.likes} likes\n      <Button\n        variant=\"outlined\"\n        size=\"small\"\n        sx={{ m: '1rem' }}\n        className='like'\n        onClick={() => likeBlog(blog.id, blog.likes)}\n      >like\n      </Button><br />\n      {blog?.user?.name ? `added by ${blog.user.name}` : ''}<br />\n      {blog?.user?.name === user?.name && <Button onClick={() => deleteBlog(blog)}>remove</Button>}\n      <h3>Comments</h3>\n      <TextField\n        type=\"text\"\n        value={comment}\n        onChange={({ target }) => setComment(target.value)}\n      />\n      <Button\n        sx={{ m: '1rem' }}\n        variant=\"contained\"\n        size=\"large\"\n        onClick={submitComment}\n      >add comment</Button>\n      {blog.comments.length\n        ? <div>\n          <ul>{blog.comments.map((comment) => <li key={comment}>{comment}</li>)}</ul>\n        </div>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n\n  const { message, color } = useSelector(state => state.message)\n  const style = {\n    display: message ? 'block' : 'none',\n    background: 'lightgray',\n    borderStyle: 'solid',\n    borderColor: color,\n    borderRadius: 5,\n    borderWidth:3,\n    color: color,\n    fontSize: '1.2em',\n    padding: 10\n  }\n  return (\n    <p style={style}>{message}</p>\n  )\n}\n\n// Notification.propTypes = {\n//   color: PropTypes.string.isRequired,\n//   text: PropTypes.string.isRequired\n// }\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Button } from '@mui/material'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility} variant=\"contained\">{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button onClick={toggleVisibility} variant=\"outlined\" size=\"small\">cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst register = async (userData) => {\n  const response = await axios.post(baseUrl, userData)\n  return response.data\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getOne = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default { getAll, getOne, register }","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { TextField, Button, Container } from '@mui/material'\nimport usersService from '../services/users'\n\nconst LoginForm = ({ handleSubmit }) => {\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [rePassword, setRePassword] = useState('')\n  const [showSignup, setShowSignup] = useState(false)\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n    handleSubmit({ username, password })\n    setUsername('')\n    setPassword('')\n  }\n\n  const handleSignup = async (event) => {\n    event.preventDefault()\n    if (name.length < 5 || username.length < 3 || password.length < 5 || password !== rePassword) {\n      return alert('Make sure you fill in the form properly!')\n    }\n    try {\n      await usersService.register({ username, password, name })\n      setPassword('')\n      setRePassword('')\n      setName('')\n      setShowSignup(!showSignup)\n    } catch (error) {\n      alert(`An error has occured: ${error.message}`)\n    }\n  }\n\n  if (showSignup) {\n    return (\n      <Container>\n        <h2>Sign up</h2>\n\n        <form onSubmit={handleSignup}>\n          <div>\n            <TextField\n              type=\"text\"\n              label=\"First and Last name\"\n              value={name}\n              onChange={({ target }) => setName(target.value)}\n              name=\"name\"\n              sx={{ mb: '1rem' }}\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"username\"\n              type=\"text\"\n              label=\"username\"\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n              name=\"Username\"\n              sx={{ mb: '1rem' }}\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"password\"\n              type=\"password\"\n              label=\"password\"\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n              name=\"Password\"\n              sx={{ mb: '1rem' }}\n            />\n          </div>\n          <div>\n            <TextField\n              type=\"password\"\n              label=\"repeat password\"\n              value={rePassword}\n              onChange={({ target }) => setRePassword(target.value)}\n              name=\"Password\"\n            />\n          </div>\n          <Button\n            sx={{ my: '1rem' }}\n            variant=\"contained\"\n            id=\"login-button\"\n            type=\"submit\"\n          >register</Button>\n          <p>Already registered? <Button onClick={() => setShowSignup(!showSignup)}>Login</Button></p>\n        </form>\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <h2>Log in</h2>\n\n      <form onSubmit={handleLogin}>\n        <div>\n          <TextField\n            id=\"username\"\n            type=\"text\"\n            label=\"username\"\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n            name=\"Username\"\n            sx={{ mb: '1rem' }}\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"password\"\n            type=\"password\"\n            label=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            name=\"Password\"\n          />\n        </div>\n        <Button\n          sx={{ my: '1rem' }}\n          variant=\"contained\"\n          id=\"login-button\"\n          type=\"submit\"\n        >login</Button>\n        <p>Not yet registered? <Button onClick={() => setShowSignup(!showSignup)}>Sign up</Button></p>\n      </form>\n    </Container>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box, TextField, Button } from '@mui/material'\n\nconst BlogForm = ({ handleSubmit }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleCreate = (event) => {\n    event.preventDefault()\n    handleSubmit({ title, author, url })\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n  return (\n    <div>\n      <h2>Create new</h2>\n      <Box\n        onSubmit={handleCreate}\n        component=\"form\"\n        sx={{ my: '1rem' }}\n      >\n        <TextField\n          required\n          label=\"Title\"\n          id=\"title\"\n          type=\"text\"\n          value={title}\n          onChange={({ target }) => setTitle(target.value)}\n          sx={{ mr: '1rem' }}\n        />\n        <TextField\n          required\n          id='author'\n          label='Author'\n          type=\"text\"\n          value={author}\n          onChange={({ target }) => setAuthor(target.value)}\n          sx={{ mr: '1rem' }}\n        />\n        <TextField\n          required\n          label=\"URL\"\n          type=\"url\"\n          value={url}\n          onChange={({ target }) => setUrl(target.value)}\n          sx={{ mr: '1rem' }}\n        />\n\n        <Button type=\"submit\" variant=\"contained\" size=\"large\">create</Button>\n\n      </Box>\n    </div>\n  )\n}\n\nBlogForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n}\n\nexport default BlogForm","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport usersService from '../services/users'\n\nimport { TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Paper, Link as MatLink } from '@mui/material'\n\nconst Users = () => {\n  const [users, setUsers] = useState([])\n  useEffect(() => {\n    usersService.getAll()\n      .then(users => {\n        setUsers(users)\n      })\n  }, [])\n\n  return (\n    <>\n      <h2>Users</h2>\n      <TableContainer component={Paper}>\n\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>blogs created</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map(user => <TableRow key={user.id}>\n              <TableCell><MatLink component={Link} to={`/users/${user.id}`}>{user.name}</MatLink></TableCell><TableCell>{user.blogs.length}</TableCell>\n            </TableRow>)}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default Users","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport usersService from '../services/users'\n\nconst User = () => {\n  const { id } = useParams()\n  const [user, setUser] = useState(null)\n  useEffect(() => {\n    usersService.getOne(id)\n      .then(foundUser => {\n        setUser(foundUser)\n      })\n  }, [])\n\n  return user ? (\n    <div>\n      <h2>{user.name}</h2>\n      <h3>added blogs</h3>\n      <ul>{user.blogs.map(blog => <li key={blog.id}>{blog.title}</li>)}</ul>\n    </div>\n  ) : null\n}\n\nexport default User","import React, { useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Switch, Route, useRouteMatch, Link } from 'react-router-dom'\n\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Users from './components/Users'\nimport User from './components/User'\n\nimport './App.css'\n\nimport { setMessage } from './reducers/notificationReducer'\nimport { initializeBlogs, createBlog, likeBlog, deleteBlog, commentBlog } from './reducers/blogReducer'\nimport { initializeUser, loginUser, logoutUser } from './reducers/userReducer'\n\nimport { Container, Table, TableBody, TableRow, TableCell, Link as MatLink, TableHead, AppBar, Toolbar, Button } from '@mui/material'\n\nconst App = () => {\n\n  const blogFormRef = useRef()\n  const blogs = useSelector(state => state.blogs)\n  const user = useSelector(state => state.user)\n\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    dispatch(initializeUser())\n  }, [dispatch])\n\n\n  const handleLogin = async ({ username, password }) => {\n    try {\n      await dispatch(loginUser({ username, password }))\n      dispatch(setMessage('login successful', 'green', 4))\n    } catch (exception) {\n      dispatch(setMessage('wrong username or password', 'red', 4))\n    }\n\n  }\n\n  const handleLogout = () => {\n    dispatch(logoutUser())\n    dispatch(setMessage('logout successful', 'green', 4))\n  }\n\n  const handleCreate = async ({ title, author, url }) => {\n    try {\n      await dispatch(createBlog({ title, author, url }))\n      blogFormRef.current.toggleVisibility()\n      dispatch(setMessage(`a new blog ${title} by ${author} added`, 'green', 4))\n    } catch (error) {\n      dispatch(setMessage(error.message, 'red', 4))\n    }\n  }\n\n  const like = async (id, numLikes) => {\n    try {\n      await dispatch(likeBlog(id, numLikes))\n      dispatch(setMessage(`blog with id=${id} has just been liked`, 'green', 4))\n    } catch (error) {\n      dispatch(setMessage(error.message, 'red', 4))\n    }\n  }\n\n  const remove = async (blog) => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n      try {\n        await dispatch(deleteBlog(blog.id))\n        dispatch(setMessage(`blog: ${blog.title} has just been deleted`, 'green', 4))\n      } catch (error) {\n        dispatch(setMessage(error.message, 'red', 4))\n      }\n    }\n  }\n\n  const addCommentToBlog = (id, comment) => {\n    dispatch(commentBlog(id, comment))\n  }\n\n  const match = useRouteMatch('/blogs/:id')\n\n  const blog = match\n    ? blogs.find(b => b.id === match.params.id)\n    : null\n\n  const loginForm = () => (\n    <Container>\n      <Notification />\n      <LoginForm\n        handleSubmit={handleLogin}\n      />\n    </Container>\n  )\n\n  const blogForm = () => {\n    return (\n      <Togglable buttonLabel=\"create new blog\" ref={blogFormRef}>\n        <BlogForm\n          handleSubmit={handleCreate}\n        />\n      </Togglable>\n    )\n  }\n\n  if (user === null) {\n    return loginForm()\n  }\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Button color=\"inherit\" component={Link} to='/blogs'>blogs</Button>\n          <Button color=\"inherit\" component={Link} to='/users'>users</Button>\n          <span>{user.name} logged in </span>\n          <Button color=\"inherit\" onClick={handleLogout}>Logout</Button>\n        </Toolbar>\n      </AppBar>\n      <Container>\n        <h2>blog app</h2>\n        <Notification />\n\n        <Switch>\n          <Route path='/users/:id'>\n            <User />\n          </Route>\n          <Route path='/users'>\n            <Users />\n          </Route>\n          <Route path='/blogs/:id'>\n            <Blog blog={blog} user={user} likeBlog={like} deleteBlog={remove} addComment={addCommentToBlog} />\n          </Route>\n          <Route path='/blogs'>\n            {blogForm()}\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Title</TableCell>\n                  <TableCell>Author</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {blogs.map(blog =>\n                  <TableRow key={blog.id}>\n                    <TableCell><MatLink component={Link} to={`/blogs/${blog.id}`} >{blog.title}</MatLink></TableCell><TableCell> {blog.author}</TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </Route>\n        </Switch>\n      </Container>\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>, document.getElementById('root'))"],"sourceRoot":""}